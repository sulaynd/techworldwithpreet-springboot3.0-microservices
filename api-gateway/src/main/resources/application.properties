
spring.application.name=api-gateway
server.port= 8181
#eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#app.eureka-server=localhost

logging.level.root = info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway = TRACE

## Discover Server Route
spring.cloud.gateway.routes[0].id=discovery-server
#spring.cloud.gateway.routes[0].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[0].uri=http://localhost:8761

#this will work and no need to define static resource root as path is not changed
#spring.cloud.gateway.routes[0].predicates[0]=Path=/

#if u  want to modify path in predicate,filter need to be added with setPath
#and it wont able to load static content,so define next route for static resource route
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

## Discover Server Static Resources Route
spring.cloud.gateway.routes[1].id=discovery-server-static
#spring.cloud.gateway.routes[1].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[1].uri=http://localhost:8761

spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**




## Flight Search Service Route
spring.cloud.gateway.routes[2].id=flight-search-service
spring.cloud.gateway.routes[2].uri=lb://flight-search-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/v1/api/flights/search/**

spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=flight-search-service
spring.cloud.gateway.routes[2].filters[0].args.fallbackuri=forward:/flightSearchServiceFallBack


## Booking Service Route
spring.cloud.gateway.routes[3].id=booking-service
spring.cloud.gateway.routes[3].uri=lb://booking-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/v1/api/bookings/**

spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=booking-service
spring.cloud.gateway.routes[3].filters[0].args.fallbackuri=forward:/bookingServiceFallBack











#spring.cloud.gateway.routes[0].filters[1].name=RequestRateLimiter
#spring.cloud.gateway.routes[0].filters[1].args.redis-rate-limiter.replenishRate=1
#spring.cloud.gateway.routes[0].filters[1].args.redis-rate-limiter.burstCapacity=1

#spring.cloud.gateway.routes[1].filters[1].name=RequestRateLimiter
#spring.cloud.gateway.routes[1].filters[1].args.redis-rate-limiter.replenishRate=1
#spring.cloud.gateway.routes[1].filters[1].args.redis-rate-limiter.burstCapacity=1


## flight Service Route
#spring.cloud.gateway.routes[2].id=flight-service
#spring.cloud.gateway.routes[2].uri=http://flight-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/v1/api/flights

## Payment Service Route
#spring.cloud.gateway.routes[3].id=payment-service
#spring.cloud.gateway.routes[3].uri=lb://payment-service
#spring.cloud.gateway.routes[3].predicates[0]=Path=/v1/api/payments



spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/spring-boot-microservices-realm

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.tracing.sampling.probability=1.0
spring.mvc.problemdetails.enabled=true

#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans




# Actuator Prometheus Endpoint
#management.endpoints.web.exposure.include= prometheus
#server.port=8181
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
